16. Question

16. Answer

def calculate_savings(N):
    initial_savings = 300
    monthly_savings = 100
    semi_annual_savings = 500
    savings = initial_savings

    for month in range(1, N + 1):
        savings += monthly_savings

        if month % 6 == 0:
            savings += semi_annual_savings

    return savings

N = int(input("Enter the number of months (N): "))
total_savings = calculate_savings(N)
print(f"John's savings after {N} months will be: ${total_savings}")

17. Question

17. Answer

from datetime import datetime, timedelta

def count_business_days(start_date, end_date):
    weekdays = [0, 1, 2, 3, 4]  # Assuming Monday to Friday

    business_day_count = 0
    current_date = start_date

    while current_date <= end_date:
        if current_date.weekday() in weekdays:
            business_day_count += 1

        current_date += timedelta(days=1)

    return business_day_count

start_date = datetime(2023, 9, 1)  # Replace with your start date
end_date = datetime(2023, 9, 15)   # Replace with your end date

business_days = count_business_days(start_date, end_date)
print(f"Number of business days between {start_date.date()} and {end_date.date()}: {business_days}")

18. Question

18. Answer

def reverse_tuple(input_tuple):
    reversed_tuple = input_tuple[::-1]
    return reversed_tuple

original_tuple = (1, 2, 3, 4, 5)
reversed_result = reverse_tuple(original_tuple)
print("Original Tuple:", original_tuple)
print("Reversed Tuple:", reversed_result)

19. Question

19. Answer
